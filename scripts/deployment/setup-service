#!/usr/bin/env bash
set -e

if [[ $(id -u) -ne 0 ]] ; then echo "root/sudo privileges required" ; exit 1 ; fi

THIS_DIR=$(readlink -f $(dirname "$0"))
SCRIPTS_DIR=$(dirname ${THIS_DIR})
PROJECT_DIR=$(dirname ${SCRIPTS_DIR})
START_FAB=${PROJECT_DIR}/start-fab.sh
START_METABASE=${PROJECT_DIR}/start-metabase.sh
SERVICES=( fab.service metabase.service )

read -p "FA_BUGSNAG_API_KEY=" FA_BUGSNAG_API_KEY
read -p "FA_ENV [qa|production] =" FA_ENV
read -p "FA_IMPLEMENTATION_NAME [JSS|NHSRC] =" FA_IMPLEMENTATION_NAME

echo "#!/bin/bash
export FA_BUGSNAG_API_KEY=${FA_BUGSNAG_API_KEY}
export FA_ENV=${FA_ENV}
export FA_IMPLEMENTATION_NAME=${FA_IMPLEMENTATION_NAME}
make start_server" > ${START_FAB}
chmod 755 ${START_FAB}
chown -R app:app ${START_FAB}
echo "Generated ${START_FAB} ..."

echo '#!/bin/bash
make start_metabase_server' > ${START_METABASE}
chmod 755 ${START_METABASE}
chown -R app:app ${START_METABASE}
echo "Generated ${START_METABASE} ..."

for SERVICE in "${SERVICES[@]}"
do
    sed -e "s;%WORKING_DIR%;${PROJECT_DIR};g" ${THIS_DIR}/${SERVICE}.template > /etc/systemd/system/${SERVICE}
    echo "Created /etc/systemd/system/${SERVICE} ..."
done

echo "systemctl daemon-reload ..."
systemctl daemon-reload
for SERVICE in "${SERVICES[@]}"
do
    systemctl enable ${SERVICE}
done
